{"ast":null,"code":"var _jsxFileName = \"/home/rodgers/Documents/Github/React/drum-machine/src/Toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './toggle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toggle = _ref => {\n  _s();\n  let {\n    label,\n    toggled,\n    onClick\n  } = _ref;\n  const [isToggled, toggle] = useState(toggled);\n  const callback = () => {\n    toggle(!isToggled);\n    onClick(!isToggled);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle1\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: isToggled,\n        onClick: callback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Toggle, \"gAJys1WB8tuHNn3LzQahbui7Mxc=\");\n_c = Toggle;\nexport default Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Toggle","_ref","_s","label","toggled","onClick","isToggled","toggle","callback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","defaultChecked","_c","$RefreshReg$"],"sources":["/home/rodgers/Documents/Github/React/drum-machine/src/Toggle.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './toggle.css'\n\nconst Toggle = ({ label, toggled, onClick }) => {\n    const [isToggled, toggle] = useState(toggled);\n\n    const callback = () => {\n        toggle(!isToggled)\n        onClick(!isToggled)\n    }\n  return (\n    <div className='toggle1'>\n    <label>\n        <strong>{label}</strong>\n        <input type=\"checkbox\" defaultChecked={isToggled} onClick={callback} />\n        <span />\n    </label>\n    </div>\n  )\n}\n\nexport default Toggle"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,MAAM,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EACvC,MAAM,CAACK,SAAS,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAACO,OAAO,CAAC;EAE7C,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACnBD,MAAM,CAAC,CAACD,SAAS,CAAC;IAClBD,OAAO,CAAC,CAACC,SAAS,CAAC;EACvB,CAAC;EACH,oBACEP,OAAA;IAAKU,SAAS,EAAC,SAAS;IAAAC,QAAA,eACxBX,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAASP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACxBf,OAAA;QAAOgB,IAAI,EAAC,UAAU;QAACC,cAAc,EAAEV,SAAU;QAACD,OAAO,EAAEG;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEf,OAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAhBKF,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAkBZ,eAAeA,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}